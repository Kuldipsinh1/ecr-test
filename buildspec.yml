version: 0.2

phases:
  pre_build:
    commands:
      - echo "--1 Logging in to Amazon ECR..."
      - aws --version
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPOSITORY_NAME
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

  build:
    commands:
      - echo "--2 Building Docker image..."
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .

  post_build:
    commands:
      - echo "--3 Pushing Docker image to ECR..."
      - docker push $REPOSITORY_URI:$IMAGE_TAG

      - echo "--4 Writing imagedefinitions.json file..."
      - printf '[{"name":"%s","imageUri":"%s"}]' $REPOSITORY_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

      - echo "--5 Fetching latest ECS task definition..."
      - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY --region $REGION)

      - echo "--6 Creating new task definition JSON..."
      - NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$REPOSITORY_URI:$IMAGE_TAG" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)')
      - echo "$NEW_TASK_DEFINITION" > taskdef.json

      - echo "taskdef.json generated successfully"

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yaml
    - taskdef.json
